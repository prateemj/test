import chromedriver_autoinstaller
from time import sleep
from selenium import webdriver
from openai import OpenAI
from dotenv import load_dotenv
from flask import request, jsonify
import os, tempfile
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.common.by import By
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
load_dotenv()

client = OpenAI(
    api_key=os.getenv("OPENAI_API_KEY")
)


def open_url_in_chrome(url, mode='headed'):
    print("Installing chrome driver")
    chromedriver_autoinstaller.install()

    options = Options()

    # Create a temporary directory for Chrome user profile
    user_data_dir = tempfile.mkdtemp()
    options.add_argument(f"--user-data-dir={user_data_dir}")

    if mode == 'headless':
        options.add_argument('--headless=new')
        options.add_argument('--disable-dev-shm-usage')
        options.add_argument('--no-sandbox')
        options.add_argument('--disable-gpu')
        options.add_argument('--window-size=1280x800')

    service = Service()
    driver = webdriver.Chrome(service=service, options=options)
    driver.get(url)
    return driver
    
def get_transcript(driver, mode):

    wait = WebDriverWait(driver, 15)

    try:
        # Expand description if needed
        more_button = wait.until(EC.element_to_be_clickable(
            (By.XPATH, "/html/body/ytd-app/div[1]/ytd-page-manager/ytd-watch-flexy/div[5]/div[1]/div/div[2]/ytd-watch-metadata/div/div[4]/div[1]/div/ytd-text-inline-expander/tp-yt-paper-button[1]")
        ))
        more_button.click()
        sleep(2)
        print("More found")
        
    except TimeoutException:
        print("No 'more' button found.")

    try:
        print("Looking for 'Show transcript'...")
        show_transcript = wait.until(EC.element_to_be_clickable(
            (By.XPATH, "//ytd-button-renderer//button[.//span[contains(text(), 'Show transcript')]]")
        ))
        show_transcript.click()
        sleep(3)
        print("Transcript button clicked")
    except TimeoutException:
        print("Transcript button not found.")
        return ""

    try:
        # Wait for the transcript panel to appear
        transcript_container = wait.until(EC.presence_of_element_located(
        (By.CSS_SELECTOR, 'ytd-engagement-panel-section-list-renderer[target-id="engagement-panel-searchable-transcript"]')))
        transcript = transcript_container.text
        return transcript
    except Exception as e:
        print("Failed to extract transcript:", e)
        return ""


def transcriptFunc(url, mode='headless'):
    print("Inside main")
    driver = open_url_in_chrome(url, mode)
    print("driver openned main")
    print("Fetching transcript ... ")
    
    transcript = get_transcript(driver, mode)
    
    print("Got the transcript", type(transcript))
    
    driver.close()
    
    return transcript


def fetchNotesFromURL():
    url = request.get_json()["url"]
    mode = "headed"
    transcript = transcriptFunc(url,mode)
    
    if len(transcript):
    
        prompt =  f"""I am giving you subtitles of a youtube video, I want you to convert each and every line into a proper format with bullet points and sections.
        Don't add anything extra. Here is an example generated by you from a sample subtitle, use this format while creating notes. 
        üß† Concept: Looping Through Arrays
        We start with an array of superheroes:
        let heroes = ["Flash", "Batman", "Superman"];
        To access elements using a loop:

        üìù Key Points:
        index starts at 0 and runs till < heroes.length.
        If you use index <= heroes.length, it will try to access an index outside the array, which returns undefined.
        JavaScript doesn't throw an out-of-bounds error but gives undefined.

        ‚ö†Ô∏è Common Mistakes:
        If you forget to increment the index

        This creates an infinite loop because the condition never changes.

        üîë Using break in Loops
        If you want to stop the loop when a condition is met:

        for (let i = 1; i <= 20; i++)
            .....
        ‚úÖ Output:
        Value of i is: 1
        Value of i is: 2
        Value of i is: 3
        Value of i is: 4
        Value of i is: 5
        Detected 5

        üßæ Summary:
        Keyword	Behavior
        break	Stops loop execution completely.
        continue	Skips current iteration, moves to next loop.
        
        --------------------------------------------------------------------------------------
        
        The above was the notes format sample, You have the actual subtitles starting from here\n {transcript}
        
        """
        print("Prompt\n\n",prompt)

        try:
            completion = client.chat.completions.create(
            model="gpt-4o-mini",
            store=True,
            messages=[
                {"role": "user", "content": prompt}
            ]
            )
            response  = completion.choices[0].message.content
            
            print("\nnnn",completion.choices[0].message.content)
            return jsonify(response), 200
        except Exception as e:
            print("‚ùå Error:", e)
            return jsonify({"message": "Something went wrong."}), 501
    else:
        return jsonify({"message": "No subtitles found for the video"}), 500
    
def fetchNotesFromFile():
    subtitle = request.get_json()["subtitle"]
    
    
    if len(subtitle):
    
        prompt =  f"""I am giving you subtitles of a youtube video, I want you to convert each and every line into a proper format with bullet points and sections.
        Don't add anything extra. Here is an example generated by you from a sample subtitle, use this format while creating notes. 
        üß† Concept: Looping Through Arrays
        We start with an array of superheroes:
        let heroes = ["Flash", "Batman", "Superman"];
        To access elements using a loop:

        üìù Key Points:
        index starts at 0 and runs till < heroes.length.
        If you use index <= heroes.length, it will try to access an index outside the array, which returns undefined.
        JavaScript doesn't throw an out-of-bounds error but gives undefined.

        ‚ö†Ô∏è Common Mistakes:
        If you forget to increment the index

        This creates an infinite loop because the condition never changes.

        üîë Using break in Loops
        If you want to stop the loop when a condition is met:

        for (let i = 1; i <= 20; i++)
            .....
        ‚úÖ Output:
        Value of i is: 1
        Value of i is: 2
        Value of i is: 3
        Value of i is: 4
        Value of i is: 5
        Detected 5

        üßæ Summary:
        Keyword	Behavior
        break	Stops loop execution completely.
        continue	Skips current iteration, moves to next loop.
        
        --------------------------------------------------------------------------------------
        
        The above was the notes format sample, You have the actual subtitles starting from here\n {subtitle}
        
        """
        print("Prompt\n\n",prompt)

        try:
            completion = client.chat.completions.create(
            model="gpt-4o-mini",
            store=True,
            messages=[
                {"role": "user", "content": prompt}
            ]
            )
            response  = completion.choices[0].message.content
            
            print("\nnnn",completion.choices[0].message.content)
            return jsonify(response), 200
        except Exception as e:
            print("‚ùå Error:", e)
            return jsonify({"message": "Something went wrong."}), 501
    else:
        return jsonify({"message": "Subtitles cannot be formatted"}), 500
    	